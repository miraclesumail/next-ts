{"ast":null,"code":"var _jsxFileName = \"/Users/sumail/node-ts/next-ts/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport useSWR from \"swr\";\nimport fetch from \"isomorphic-unfetch\";\nimport React from \"react\";\nimport { context } from './_app';\nimport Loader from '../components/loader';\n\nfunction fetcher(url) {\n  console.log(url, \"请求的url\");\n  return fetch(url).then(r => r.json());\n}\n\nconst Home = ({\n  userAgent\n}) => {\n  const {\n    data,\n    error\n  } = useSWR(\"/api/randomCode\", fetcher);\n  const {\n    name,\n    addAge\n  } = React.useContext(context);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    title: \"about page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"About Page \", process.env.name)), __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    onClick: addAge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Hello world! - user agent: \", userAgent, \" \", name));\n}; // getInitialProps can only be added to a component in this page\n// Home.getInitialProps = ({ req, ...rest }) => {\n//   console.log(rest, \"上海市\");\n//   const userAgent = req ? req.headers[\"user-agent\"] || \"\" : navigator.userAgent;\n//   return { userAgent };\n// };\n\n\nclass Element {\n  constructor(tagName, props, children) {\n    this.tagName = void 0;\n    this.tagName = tagName;\n  }\n\n  render() {\n    const parent = document.createElement();\n  }\n\n}\n\nexport async function getStaticProps(context) {\n  console.log(\"执行了\", context);\n  console.log(process.env.USERNAME, \"用户名\");\n  console.log(process.env.name, \"环境变量\");\n  const response = await fetch(\"http://localhost:3000/api/cookie\");\n  console.log(response.headers.get(\"set-cookie\"), \"ffff\"); // By returning { props: post1s }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      persons: \"pp\"\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/sumail/node-ts/next-ts/pages/index.tsx"],"names":["Link","useSWR","fetch","React","context","Loader","fetcher","url","console","log","then","r","json","Home","userAgent","data","error","name","addAge","useContext","process","env","Element","constructor","tagName","props","children","render","parent","document","createElement","getStaticProps","USERNAME","response","headers","get","persons"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,QAAjB;AACA,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWG,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,MAAMC,IAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC/D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBf,MAAM,CAAC,iBAAD,EAAoBK,OAApB,CAA9B;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBf,KAAK,CAACgB,UAAN,CAAiBf,OAAjB,CAAzB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCgB,OAAO,CAACC,GAAR,CAAYJ,IAA9C,CADF,CADF,EAIC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAKE;AAAI,IAAA,OAAO,EAAEC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAiDJ,SAAjD,OAA6DG,IAA7D,CALF,CADF;AASD,CAZD,C,CAcA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMK,OAAN,CAAc;AAGXC,EAAAA,WAAW,CAACC,OAAD,EAAkBC,KAAlB,EAA8BC,QAA9B,EAAgD;AAAA,SAFnDF,OAEmD;AACvD,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,EAAf;AACH;;AATU;;AAYd,OAAO,eAAeC,cAAf,CAA8B3B,OAA9B,EAA4C;AACjDI,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,OAAnB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYW,OAAO,CAACC,GAAR,CAAYW,QAAxB,EAAkC,KAAlC;AACAxB,EAAAA,OAAO,CAACC,GAAR,CAAYW,OAAO,CAACC,GAAR,CAAYJ,IAAxB,EAA8B,MAA9B;AACA,QAAMgB,QAAQ,GAAG,MAAM/B,KAAK,CAAC,kCAAD,CAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,CAAZ,EAAgD,MAAhD,EALiD,CAMjD;AACA;;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLW,MAAAA,OAAO,EAAE;AADJ;AADF,GAAP;AAKD;AACD,eAAevB,IAAf","sourcesContent":["import { NextPage } from \"next\";\nimport Link from \"next/link\";\nimport useSWR from \"swr\";\nimport fetch from \"isomorphic-unfetch\";\nimport React from \"react\";\nimport { context } from './_app';\nimport Loader from '../components/loader';\n\nfunction fetcher(url: string) {\n  console.log(url, \"请求的url\");\n  return fetch(url).then(r => r.json());\n}\n\nconst Home: NextPage<{ userAgent: string }> = ({ userAgent }) => {\n  const { data, error } = useSWR(\"/api/randomCode\", fetcher);\n  const { name, addAge } = React.useContext(context);\n  return (\n    <div>\n      <Link href=\"/about\">\n        <a title=\"about page\">About Page {process.env.name}</a>\n      </Link>\n     <Loader/>\n      <h1 onClick={addAge}>Hello world! - user agent: {userAgent} {name}</h1>\n    </div>\n  );\n};\n\n// getInitialProps can only be added to a component in this page\n// Home.getInitialProps = ({ req, ...rest }) => {\n//   console.log(rest, \"上海市\");\n//   const userAgent = req ? req.headers[\"user-agent\"] || \"\" : navigator.userAgent;\n//   return { userAgent };\n// };\n\nclass Element {\n   private tagName: string;\n\n   constructor(tagName: string, props: any, children: any[] ) {\n       this.tagName = tagName;\n   } \n\n   render() {\n       const parent = document.createElement()\n   }\n}\n\nexport async function getStaticProps(context: any) {\n  console.log(\"执行了\", context);\n  console.log(process.env.USERNAME, \"用户名\");\n  console.log(process.env.name, \"环境变量\");\n  const response = await fetch(\"http://localhost:3000/api/cookie\");\n  console.log(response.headers.get(\"set-cookie\"), \"ffff\");\n  // By returning { props: post1s }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      persons: \"pp\"\n    }\n  };\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}