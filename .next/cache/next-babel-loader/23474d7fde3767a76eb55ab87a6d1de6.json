{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers'; // in this file we are initializing the redux store by passing initial state and instance of reducer, we are applying thunk middleware to support async data flow.\n\nexport var initStore = function initStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return createStore(reducer, initialState, applyMiddleware(thunk));\n};","map":{"version":3,"sources":["/Users/sumail/node-ts/next-ts/redux/index.ts"],"names":["createStore","applyMiddleware","thunk","reducer","initStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAuB;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;AAC9C,SAAOL,WAAW,CAACG,OAAD,EAAUE,YAAV,EAA+BJ,eAAe,CAACC,KAAD,CAA9C,CAAlB;AACD,CAFM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\n// in this file we are initializing the redux store by passing initial state and instance of reducer, we are applying thunk middleware to support async data flow.\nexport const initStore = (initialState = {}) => {\n  return createStore(reducer, initialState as any, applyMiddleware(thunk));\n};"]},"metadata":{},"sourceType":"module"}