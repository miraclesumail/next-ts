{"ast":null,"code":"var _jsxFileName = \"/Users/sumail/node-ts/next-ts/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport useSWR from \"swr\";\nimport fetch from \"isomorphic-unfetch\";\nimport React from \"react\";\nimport { context } from './_app';\n\nfunction fetcher(url) {\n  console.log(url, \"请求的url\");\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nvar Home = function Home(_ref) {\n  var userAgent = _ref.userAgent;\n\n  var _useSWR = useSWR(\"/api/randomCode\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var _React$useContext = React.useContext(context),\n      name = _React$useContext.name;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    title: \"about page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"About Page \", process.env.name)), __jsx(\"h1\", {\n    on: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Hello world! - user agent: \", userAgent, \" \", name));\n}; // getInitialProps can only be added to a component in this page\n// Home.getInitialProps = ({ req, ...rest }) => {\n//   console.log(rest, \"上海市\");\n//   const userAgent = req ? req.headers[\"user-agent\"] || \"\" : navigator.userAgent;\n//   return { userAgent };\n// };\n\n\nexport var __N_SSG = true;\nexport default Home;","map":{"version":3,"sources":["/Users/sumail/node-ts/next-ts/pages/index.tsx"],"names":["Link","useSWR","fetch","React","context","fetcher","url","console","log","then","r","json","Home","userAgent","data","error","useContext","name","process","env"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,QAAjB;AACA,SAAOJ,KAAK,CAACI,GAAD,CAAL,CAAWG,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAED,IAAMC,IAAqC,GAAG,SAAxCA,IAAwC,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,gBACvCZ,MAAM,CAAC,iBAAD,EAAoBI,OAApB,CADiC;AAAA,MACvDS,IADuD,WACvDA,IADuD;AAAA,MACjDC,KADiD,WACjDA,KADiD;;AAAA,0BAE9CZ,KAAK,CAACa,UAAN,CAAiBZ,OAAjB,CAF8C;AAAA,MAEvDa,IAFuD,qBAEvDA,IAFuD;;AAG/D,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCC,OAAO,CAACC,GAAR,CAAYF,IAA9C,CADF,CADF,EAIE;AAAI,IAAA,EAAE,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAmCJ,SAAnC,OAA+CI,IAA/C,CAJF,CADF;AAQD,CAXD,C,CAaA;AACA;AACA;AACA;AACA;AACA;;;;AAgBA,eAAeL,IAAf","sourcesContent":["import { NextPage } from \"next\";\nimport Link from \"next/link\";\nimport useSWR from \"swr\";\nimport fetch from \"isomorphic-unfetch\";\nimport React from \"react\";\nimport { context } from './_app';\n\nfunction fetcher(url: string) {\n  console.log(url, \"请求的url\");\n  return fetch(url).then(r => r.json());\n}\n\nconst Home: NextPage<{ userAgent: string }> = ({ userAgent }) => {\n  const { data, error } = useSWR(\"/api/randomCode\", fetcher);\n  const { name } = React.useContext(context);\n  return (\n    <div>\n      <Link href=\"/about\">\n        <a title=\"about page\">About Page {process.env.name}</a>\n      </Link>\n      <h1 on>Hello world! - user agent: {userAgent} {name}</h1>\n    </div>\n  );\n};\n\n// getInitialProps can only be added to a component in this page\n// Home.getInitialProps = ({ req, ...rest }) => {\n//   console.log(rest, \"上海市\");\n//   const userAgent = req ? req.headers[\"user-agent\"] || \"\" : navigator.userAgent;\n//   return { userAgent };\n// };\n\nexport async function getStaticProps(context: any) {\n  console.log(\"执行了\", context);\n  console.log(process.env.USERNAME, \"用户名\");\n  console.log(process.env.name, \"环境变量\");\n  const response = await fetch(\"http://localhost:3000/api/cookie\");\n  console.log(response.headers.get(\"set-cookie\"), \"ffff\");\n  // By returning { props: post1s }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      persons: \"pp\"\n    }\n  };\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}